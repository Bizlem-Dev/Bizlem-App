package biz.com.app.servlet;

import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;

import java.util.ArrayList;

import javax.jcr.Node;
import javax.jcr.Session;
import javax.jcr.SimpleCredentials;
import javax.servlet.ServletException;

import org.apache.felix.scr.annotations.Component;
import org.apache.felix.scr.annotations.Properties;
import org.apache.felix.scr.annotations.Property;
import org.apache.felix.scr.annotations.Reference;
import org.apache.felix.scr.annotations.Service;
import org.apache.sling.api.SlingHttpServletRequest;
import org.apache.sling.api.SlingHttpServletResponse;
import org.apache.sling.api.servlets.SlingAllMethodsServlet;
import org.apache.sling.jcr.api.SlingRepository;

import biz.com.service.NewsService;
import biz.com.service.impl.SimpleTriggerExample;

@Component(immediate = true, metatype = false)
@Service(value = javax.servlet.Servlet.class)
@Properties({
		@Property(name = "service.description", value = "View News Servlet"),
		@Property(name = "service.vendor", value = "VISL Company"),
		@Property(name = "sling.servlet.paths", value = { "/servlet/service/news" }),
		@Property(name = "sling.servlet.resourceTypes", value = "sling/servlet/default"),
		@Property(name = "sling.servlet.extensions", value = { "viewnews",
				"pageview" }) })
@SuppressWarnings("serial")
public class NewsServlet extends SlingAllMethodsServlet {

	@Reference
	private SlingRepository repos;

	@Reference
	private NewsService service;

	@Override
	protected void doGet(SlingHttpServletRequest request,
			SlingHttpServletResponse response) throws ServletException,
			IOException {

		@SuppressWarnings("unused")
		Node rootNode, rootNode1 = null;
		if (request.getRequestPathInfo().getExtension().equals("viewnews")) {
			Session session;
			PrintWriter o = response.getWriter();
			try {

				request.setAttribute("normal", service.getNewsList("0"));
				request.setAttribute("science", service.getNewsList("1"));
				request.setAttribute("envoirment", service.getNewsList("2"));
				request.setAttribute("technology", service.getNewsList("3"));
				request.setAttribute("business", service.getNewsList("4"));
				request.getRequestDispatcher("/content/news/.news").forward(
						request, response);
			} catch (Exception e) {
				o.print(e.getMessage());
			}

		} else if (request.getRequestPathInfo().getExtension()
				.equals("createstylemaster")) {
			request.getRequestDispatcher("/content/news/.createStyleMaster")
					.forward(request, response);
		} else if (request.getRequestPathInfo().getExtension()
				.equals("createsourcemaster")) {
			request.getRequestDispatcher("/content/news/.createSourceMaster")
					.forward(request, response);
		} else if (request.getRequestPathInfo().getExtension()
				.equals("feedstylelist")) {

			request.getRequestDispatcher("/content/news/.listfeedstyle")
					.forward(request, response);
		} else if (request.getRequestPathInfo().getExtension()
				.equals("getfeed")) {
				request.getRequestDispatcher("/content/news/.feedNews").forward(
					request, response);
		}else if(request.getRequestPathInfo().getExtension()
				.equals("checks")){
			//response.getWriter().print(service.callGetService(request.getParameter("url"), null,null));
			try{
			InputStream streams = new ByteArrayInputStream(service.callGetService(request.getParameter("url"), null,null).toString().getBytes());
			response.getWriter().print(streams);
			BufferedReader rd = new BufferedReader(new InputStreamReader(streams
					));
			StringBuilder responsee = new StringBuilder();
			String line;
			while ((line = rd.readLine()) != null) {
				responsee.append(line);
			}
			rd.close();
			response.getWriter().print(responsee.toString());
			}catch(Exception ew){
				response.getWriter().print("eeeeeeeee"+ew.getMessage());
			}
		}else if(request.getRequestPathInfo().getExtension()
				.equals("schedularcall")){
			
			String feedurl = request.getParameter("urlid");
			
			try {
				Session session = repos.login(new SimpleCredentials("admin",
						"admin".toCharArray()));
				Node content = session.getRootNode().getNode("content");
				if (content.hasNode("newsfeed")) {
					content = content.getNode("newsfeed");
				} else {
					content = content.addNode("newsfeed");
				}

				if (content.hasNode("sourcemaster")) {
					content = content.getNode("sourcemaster");
				} else {
					content = content.addNode("sourcemaster");
					content.setProperty("count", Long.valueOf("0"));
				}

				if (content.hasNode(feedurl)) {
					String url=content.getNode(feedurl).getProperty("feedurl").getString();
					content=content.getNode(feedurl);
					
				    InputStream streams = new ByteArrayInputStream(service.callGetService(url, null,null).toString().getBytes());
				  
				    content.getNode(feedurl).remove();
					Node fileNode = content.addNode(String.valueOf(feedurl), "nt:file");

					Node jcrNode = fileNode.addNode("jcr:content",
							"nt:resource");
					response.getWriter().print("Stage 2 clear");
					jcrNode.setProperty("jcr:data", streams);
//
					response.getWriter().print("Stage 3 clear");
					jcrNode.setProperty("jcr:mimeType", "text/plain");
					response.getWriter().print("Stage 4 clear");
					session.save();
					response.getWriter().print("success");
				}
					
			} catch (Exception e) {
				response.getWriter().print("rrrrr"+e.getLocalizedMessage()+"-------"+e.getMessage());
//				response.sendRedirect("/portal/servlet/service/news.createsourcemaster?state=failed"
//						+ e.getMessage());
			}
		}else if(request.getRequestPathInfo().getExtension()
				.equals("getstyles")){

			String styleid = request.getParameter("styleid");
			
			try {
				Session session = repos.login(new SimpleCredentials("admin",
						"admin".toCharArray()));
				Node content = session.getRootNode().getNode("content");
				if (content.hasNode("newsfeed")) {
					content = content.getNode("newsfeed");
				} else {
					content = content.addNode("newsfeed");
				}

				if (content.hasNode("stylemaster")) {
					content = content.getNode("stylemaster");
				} else {
					content = content.addNode("stylemaster");
					content.setProperty("count", Long.valueOf("0"));
				}
				
				content=content.getNode(styleid);
			response.getWriter().print("&titlestyle="+content.getProperty("titlestyle").getString()+"&descriptionstyle="+content.getProperty("descriptionstyle").getString()+"&headerstyle="+content.getProperty("headerstyle").getString()+"&datestyle="+content.getProperty("datestyle").getString()+"&headerTitle="+content.getProperty("title").getString()+"&type="+content.getProperty("type").getString()+"' style='"+content.getProperty("framestyle").getString()+"'");
			}catch(Exception e){
				
			}
		}else if(request.getRequestPathInfo().getExtension()
				.equals("searchinsolr")){

			String[] para = { "process", "query" };
			String[] paravalue = { "notstore", request.getParameter("query") };

			String res = service.callPostService(
					"http://50.17.231.172/bsearch/ressfeedtoDB.php", para,
					paravalue);
			ArrayList al=new ArrayList();
			String ulr="<select id='mystyle'>";
			if (res != null) {
				String[] urlid = res.split(",");
				
				try {
					Session session = repos.login(new SimpleCredentials(
							"admin", "admin".toCharArray()));
					Node d=session.getRootNode().getNode("content").getNode("newsfeed").getNode("sourcemaster");
			
					for(int i=0;i<urlid.length;i++){
						if(urlid[i]!=null && !urlid[i].equals("") && d.hasNode(urlid[i])){
							
							Node p=d.getNode(urlid[i].trim());
							ulr=ulr+"<option value='"+p.getProperty("id").getString()+"'>"+p.getProperty("title").getString()+"</option>";
						}
						
					}
				} catch (Exception e) {
					response.getWriter().write("exception --"+e.getMessage()+res);
				}
			}
			response.getWriter().write(ulr+"</select>");
			
		}else if(request.getRequestPathInfo().getExtension()
				.equals("searchinsolrview")){
			request.getRequestDispatcher("/content/news/.solrcreateSourceMaster").forward(
					request, response);
		}
		else if(request.getRequestPathInfo().getExtension()
				.equals("activaterevisite")){
			try {
					Session session = repos.login(new SimpleCredentials(
							"admin", "admin".toCharArray()));
					Node d=session.getRootNode().getNode("content").getNode("newsfeed").getNode("sourcemaster");
			if(d.hasNodes()){
				
			}
					
				} catch (Exception e) {
					response.getWriter().write("exception --"+e.getMessage());
				}
		}
	}
	
	@Override
	protected void doPost(SlingHttpServletRequest request,
			SlingHttpServletResponse response) throws ServletException,
			IOException {
		long l = 0;
		if (request.getRequestPathInfo().getExtension()
				.equals("addstylemaster")) {
			String htmlcode = request.getParameter("htmlcode");
			String placename = request.getParameter("caption");
			String id = request.getParameter("styleid");
			try {
				Session session = repos.login(new SimpleCredentials("admin",
						"admin".toCharArray()));
				Node content = session.getRootNode().getNode("content");
				if (content.hasNode("newsfeed")) {
					content = content.getNode("newsfeed");
				} else {
					content = content.addNode("newsfeed");
				}

				if (content.hasNode("stylemaster")) {
					content = content.getNode("stylemaster");
				} else {
					content = content.addNode("stylemaster");
					content.setProperty("count", Long.valueOf("0"));
				}

				if (content.hasNode(id)) {
					content = content.getNode(id);
					content.setProperty("title", placename);
					String headerstyle="color:"+request.getParameter("hcolor")+";background-color:"+request.getParameter("hbcolor");
					String framestyle="width:"+request.getParameter("framew")+"px;height:"+request.getParameter("frameh")+"px";
					String titlestyle="color:"+request.getParameter("tcolor")+";font-size:"+request.getParameter("tsize")+"px;";
					String descriptionstyle="color:"+request.getParameter("dcolor")+";font-size:"+request.getParameter("dsize")+"px;";
					String datestyle="color:"+request.getParameter("dacolor")+";font-size:"+request.getParameter("dasize")+"px;";
					
					content.setProperty("framestyle", framestyle);
					content.setProperty("titlestyle", titlestyle);
					content.setProperty("descriptionstyle", descriptionstyle);
					content.setProperty("datestyle", datestyle);
					content.setProperty("headerstyle", headerstyle);
					
					l = Long.valueOf(id);
					content = content.addNode("");

				} else {
					l = content.getProperty("count").getLong();
					content.setProperty("count", l + 1);
					content = content.addNode(String.valueOf(l));
					content.setProperty("id", l);
					content.setProperty("title", placename);
					String framestyle="border-color:"+request.getParameter("framecolor")+";width:"+request.getParameter("framew")+"px;height:"+request.getParameter("frameh")+"px";
					String titlestyle="color:"+request.getParameter("tcolor")+";font-size:"+request.getParameter("tsize")+"px;";
					String descriptionstyle="color:"+request.getParameter("dcolor")+";font-size:"+request.getParameter("dsize")+"px;";
					String datestyle="color:"+request.getParameter("dacolor")+";font-size:"+request.getParameter("dasize")+"px;";
					String headerstyle="color:"+request.getParameter("hcolor")+";background-color:"+request.getParameter("hbcolor");
					content.setProperty("type", request.getParameter("fields"));
					content.setProperty("framestyle", framestyle);
					content.setProperty("titlestyle", titlestyle);
					content.setProperty("descriptionstyle", descriptionstyle);
					content.setProperty("datestyle", datestyle);
					content.setProperty("headerstyle", headerstyle);
				}
				session.save();
				response.sendRedirect("/portal/servlet/service/news.createstylemaster?state=success&id="
						+ l);

			} catch (Exception e) {
				// TODO Auto-generated catch block
				// e.printStackTrace();
				response.sendRedirect("/portal/servlet/service/news.createstylemaster?state=failed"
						+ e.getMessage());
			}
		} else if (request.getRequestPathInfo().getExtension()
				.equals("addsourcemaster")) {

			String feedurl = request.getParameter("feedurl");
			String metadeta = request.getParameter("metadeta");
			String revivitetime = request.getParameter("revisitetime");
			String id = request.getParameter("sourceid");
			String dbresponce = "";
			try {
				Session session = repos.login(new SimpleCredentials("admin",
						"admin".toCharArray()));
				Node content = session.getRootNode().getNode("content");
				if (content.hasNode("newsfeed")) {
					content = content.getNode("newsfeed");
				} else {
					content = content.addNode("newsfeed");
				}

				if (content.hasNode("sourcemaster")) {
					content = content.getNode("sourcemaster");
				} else {
					content = content.addNode("sourcemaster");
					content.setProperty("count", Long.valueOf("0"));
				}

				if (content.hasNode(id)) {
					content = content.getNode(id);
					content.setProperty("feedurl", feedurl);
					content.setProperty("metadeta", metadeta);
					content.setProperty("revivitetime", revivitetime);
					content.setProperty("id", id);
					content.setProperty("title",  request.getParameter("sourcename"));
					//content.setProperty("bizurl", id + ".xml");
					l = Long.valueOf(id);
					dbresponce="success";
				} else {
					l = content.getProperty("count").getLong();
					content.setProperty("count", l + 1);
					content = content.addNode(String.valueOf(l));
					content.setProperty("feedurl", feedurl);
					content.setProperty("metadeta", metadeta);
					content.setProperty("revivitetime", revivitetime);
					content.setProperty("id", l);
					content.setProperty("title",  request.getParameter("sourcename"));
					content.setProperty("bizurl",
							"/content/newsfeed/sourcemaster/" + l+"/"+l);
					response.getWriter().print("Stage 1 clear");
					
				   
				    InputStream streams = new ByteArrayInputStream(service.callGetService(feedurl, null,null).toString().getBytes());
				  
					
					Node fileNode = content.addNode(String.valueOf(l), "nt:file");

					Node jcrNode = fileNode.addNode("jcr:content",
							"nt:resource");
					response.getWriter().print("Stage 2 clear");
					jcrNode.setProperty("jcr:data", streams);
//
					response.getWriter().print("Stage 3 clear");
					jcrNode.setProperty("jcr:mimeType", "text/plain");
					response.getWriter().print("Stage 4 clear");
					dbresponce = service.addtoDb(request, String.valueOf(l));
					SimpleTriggerExample b=new SimpleTriggerExample();
					
					b.fireJob(String.valueOf(l),b.calculateTimeInSec(revivitetime));
				}
				if (dbresponce.trim().equals("success")) {
					session.save();
					response.sendRedirect("/portal/servlet/service/news.createsourcemaster?state=success&id=new");
				} else {
					response.getWriter().print("not ressdd"+dbresponce);
//					response.sendRedirect("/portal/servlet/service/news.createsourcemaster?state=failed&id=new"
//							+ dbresponce);
				}

				// response.sendRedirect("/portal/servlet/service/news.createsourcemaster?state=success&id="+l);
			} catch (Exception e) {
				response.getWriter().print("rrrrr"+e.getLocalizedMessage()+"-------"+e.getMessage());
//				response.sendRedirect("/portal/servlet/service/news.createsourcemaster?state=failed"
//						+ e.getMessage());
			}
		}

	}
}
